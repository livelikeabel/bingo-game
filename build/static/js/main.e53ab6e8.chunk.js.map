{"version":3,"sources":["utils/index.js","reducers/bingo.js","reducers/index.js","components/BingoTd.js","components/BingoTable.js","App.js","serviceWorker.js","index.js"],"names":["initStage","row","col","data","Array","fill","map","sortStage","ROW","COL","stage","size","startAt","arguments","length","undefined","Object","toConsumableArray","keys","i","range","shuffle","forEach","v","Math","floor","number","checked","prototype","this","j","random","_ref","checkNumber","block","setGameStatus","gameStatus","type","INITIAL_STATE","player1","bingoCount","turn","player2","bingo","state","objectSpread","action","player1Stage","player2Stage","player","defineProperty","combineReducers","BingoTd","onClickTd","_ref2","react_default","a","createElement","onClick","style","height","width","background","className","key","BingoTable","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_calculateBingoCount","prevProps","_this$props","setBingoCount","_countBingo","_checkBingoCompleted","_this$props2","_this$props2$bingo","alert","concat","_this$props3","filter","colCount","_","_getBlock","pageX","pageY","_this$props4","_this$props4$block","_this$table$current$g","table","current","getBoundingClientRect","top","left","parseInt","_handleClickTd","_this$props5","checkBlock","_renderRows","_this$props6","src_components_BingoTd","React","createRef","ref","Component","mapDispatchToProps","connect","_ref2$bingo","App","opacity","src_components_BingoTable","_ref$bingo","Boolean","window","location","hostname","match","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e53ab6e8.chunk.js","sourcesContent":["export const initStage = (row, col, data) => {\n    return Array(row).fill(null).map(() => Array(col).fill(data));\n}\n\nexport const sortStage = (ROW, COL, stage) => {\n    range(ROW * COL, 1).shuffle().forEach((v, i) => {\n        const row = Math.floor(i / ROW);\n        const col = i % COL\n        stage[row][col] = { number: v, checked: false }\n    })\n    return stage\n}\n\nfunction range(size, startAt = 0) {\n    return [...Array(size).keys()].map(i => i + startAt)\n}\n\nArray.prototype.shuffle = function () {\n    for (let i = this.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [this[i], this[j]] = [this[j], this[i]];\n    }\n    return this;\n}\n\nexport const checkNumber = (number, stage) => {\n    stage.forEach(row => {\n        row.forEach(block => {\n            if(block.number === number) block.checked = true;\n        })\n    })\n    return stage\n}","import { initStage, sortStage, checkNumber } from '../utils';\nconst ROW = 5;\nconst COL = 5;\n\nexport const SET_GAME_STATUS = 'SET_GAME_STATUS';\nexport const CHECK_BLOCK = 'CHECK_BLOCK';\nexport const SET_BINGO_COUNT = 'SET_BINGO_COUNT';\n\nexport const setGameStatus = gameStatus => ({ type: SET_GAME_STATUS, gameStatus })\nexport const checkBlock = block => ({ type: CHECK_BLOCK, block })\nexport const setBingoCount = (player, bingoCount) => ({ type: SET_BINGO_COUNT, player, bingoCount })\n\nconst INITIAL_STATE = {\n    gameStatus: false,\n    block: { size: 80, row: ROW, col: COL },\n    player1: {\n        stage: initStage(ROW, COL, { number: null, checked: false }),\n        bingoCount: 0,\n        turn: false\n    },\n    player2: {\n        stage: initStage(ROW, COL, { number: null, checked: false }),\n        bingoCount: 0,\n        turn: false\n    },\n}\n\nconst bingo = (state = { ...INITIAL_STATE }, action) => {\n    switch (action.type) {\n        case SET_GAME_STATUS:\n            if (action.gameStatus) {\n                const { player1, player2 } = state;\n                const player1Stage = sortStage(ROW, COL, state.player1.stage)\n                const player2Stage = sortStage(ROW, COL, state.player2.stage)\n                return {\n                    ...state,\n                    gameStatus: action.gameStatus,\n                    block: { size: 80, row: ROW, col: COL },\n                    player1: { ...player1, stage: player1Stage, turn: true },\n                    player2: { ...player2, stage: player2Stage }\n                }\n            }\n            if (!action.gameStatus) {\n                return {\n                    ...INITIAL_STATE,\n                    player1: { stage: initStage(ROW, COL, { number: null, checked: false }), bingoCount: 0, turn: false },\n                    player2: { stage: initStage(ROW, COL, { number: null, checked: false }), bingoCount: 0, turn: false }\n                }\n            }\n        case CHECK_BLOCK:\n            const { block: { number } } = action;\n            const { player1, player2 } = state;\n            return {\n                ...state,\n                player1: { ...player1, stage: checkNumber(number, player1.stage), turn: !player1.turn },\n                player2: { ...player2, stage: checkNumber(number, player2.stage), turn: !player2.turn }\n            }\n        case SET_BINGO_COUNT:\n            const { player, bingoCount } = action;\n            return {\n                ...state,\n                [player]: { ...state[player], bingoCount }\n            }\n        default:\n            return state\n    }\n}\n\nexport default bingo;","import { combineReducers } from 'redux';\nimport bingo from './bingo.js'\nexport default combineReducers({bingo})","import React from 'react';\nimport './BingoTd.scss';\n\nconst BingoTd = ({row, block, onClickTd}) => {\n    return row.map(({ number, checked }, i) => (\n        <td\n            onClick={number && onClickTd}\n            style={{\n                height: block.size,\n                width: block.size,\n                background: checked ? '#f6f6f6' : ''\n            }}\n            className='BingoRow-td'\n            key={i}>\n            {number}\n        </td>\n    ))\n}\n\nexport default BingoTd;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BingoTd from './BingoTd.js';\nimport { checkBlock, setBingoCount, setGameStatus } from '../reducers/bingo';\nimport './BingoTable.scss';\n\nclass BingoTable extends Component {\n    constructor(props) {\n        super(props);\n        this.table = React.createRef();\n    }\n\n    componentDidUpdate(prevProps) {\n        this._calculateBingoCount(prevProps);\n        this._checkBingoCompleted();\n    }\n\n    _calculateBingoCount = prevProps => {\n        const { setBingoCount, player } = this.props;\n        const bingoCount = this._countBingo();\n        if (prevProps.bingo[player].bingoCount !== bingoCount) {\n            setBingoCount(player, bingoCount);\n        }\n    }\n\n    _checkBingoCompleted = () => {\n        const { bingo, bingo: { player1, player2 }, player } = this.props;\n        if (bingo[player].bingoCount >= 5) {\n            player1.bingoCount === player2.bingoCount ?\n                alert('무승부 입니다 :)') :\n                alert(`${player}가 빙고를 완성했습니다!`);\n            this.props.setGameStatus(false);\n        }\n    }\n\n    _countBingo = () => {\n        const { bingo, player } = this.props;\n        const { stage } = bingo[player];\n        let bingoCount = 0;\n        // 행검사\n        stage.forEach(row => {\n            const checkeds = row.filter(block => block.checked === true);\n            if (checkeds.length === 5) bingoCount++\n        })\n        // 열검사\n        stage.forEach((row, i) => {\n            let colCount = 0;\n            row.forEach((_, j) => {\n                if (stage[j][i].checked) colCount++;\n            })\n            if (colCount === 5) bingoCount++;\n        })\n        // 왼쪽 대각선 검사\n        const leftDiagonal = stage.filter((_, i) => stage[i][i].checked === true)\n        if (leftDiagonal.length === 5) bingoCount++;\n\n        // 오른쪽 대각선 검사\n        const rightDiagonal = stage.filter((row, i) => {\n            return stage[row.length - (i + 1)][i].checked === true\n        })\n        if (rightDiagonal.length === 5) bingoCount++;\n\n        return bingoCount\n    }\n\n    _getBlock = (pageX, pageY) => {\n        const { block: { size, row, col }, bingo, player } = this.props\n        const { stage } = bingo[player]\n        const { top, left } = this.table.current.getBoundingClientRect()\n        if (pageX < left || pageX > (left + size * row) ||\n            pageY < top || pageY > (top + size * col)\n        ) return null;\n        return stage[parseInt((pageY - top) / size)][parseInt((pageX - left) / size)]\n    }\n\n    _handleClickTd = ({ pageX, pageY }) => {\n        const { bingo, player } = this.props;\n        if (!bingo[player].turn) return alert('잘못된 차례 입니다.');\n        const block = this._getBlock(pageX, pageY);\n        if (block) this.props.checkBlock(block);\n    }\n\n    _renderRows = () => {\n        const { player, bingo, block } = this.props;\n        return bingo[player].stage.map((row, i) => (\n            <tr key={i}>\n                <BingoTd row={row} block={block} onClickTd={this._handleClickTd} />\n            </tr>\n        ))\n    }\n\n    render() {\n        return (\n            <table ref={this.table} className='BingoTable'>\n                <tbody>\n                    {this._renderRows()}\n                </tbody>\n            </table>\n        )\n    }\n}\n\nconst mapStateToProps = ({ bingo, bingo: { gameStatus, block } }) => ({\n    bingo, gameStatus, block\n});\nconst mapDispatchToProps = { checkBlock, setBingoCount, setGameStatus };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BingoTable);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BingoTable from './components/BingoTable';\nimport { setGameStatus } from './reducers/bingo';\nimport './App.scss';\n\nclass App extends Component {\n\n\n  render() {\n    const { setGameStatus, gameStatus, player1, player2 } = this.props;\n    return (\n      <div className=\"App\">\n        <h1>BIIIIINGO GAME!!!!</h1>\n        <button\n          onClick={() => setGameStatus(!gameStatus)}\n        >\n          {gameStatus ? 'RESTART' : 'START'}\n        </button>\n        <div className=\"App-bingoWrapper\">\n          <div style={{ opacity: !player1.turn && 0.3 }}>\n            <h3>P1 Bingo Count: {player1.bingoCount}</h3>\n            <BingoTable player={'player1'} />\n          </div>\n          <div style={{ opacity: !player2.turn && 0.3 }}>\n            <h3>P2 Bingo Count: {player2.bingoCount}</h3>\n            <BingoTable player={'player2'} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ bingo: { gameStatus, player1, player2 } }) => ({\n  gameStatus, player1, player2\n});\nconst mapDispatchToProps = { setGameStatus }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}